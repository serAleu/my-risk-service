server:
  port: 8081
spring:
  flyway:
    baselineOnMigrate: ${BASELINE_ON_MIGRATE:true}
  config:
    activate:
      on-profile: ${PROFILE:preprod}
  jpa:
    open-in-view: ${SPRING_JPA_OPEN_IN_VIEW:false}
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  main:
    allow-bean-definition-overriding: ${SPRING_ALLOW_BEAN_OVERRIDING:true}
  cloud:
    compatibility-verifier:
      enabled: false
    aws:
      region:
        auto: false
        static: ap-southeast-1
      credentials:
        access-key: ${xxx:xxx}
        secret-key: ${xxx:xxx}
      stack:
        auto: false
  activemq:
    broker-url:

using-mocks:
  basic: ${USING_MOCKS_BASIC:false}
  blacklists: ${USING_MOCKS_BL:false}
  bureau: ${USING_MOCKS_BUREAU:false}
  cooldown: ${USING_MOCKS_COOLDOWN:false}
  deduplication: ${USING_MOCKS_DEDUP:false}
  final: ${USING_MOCKS_FINAL:false}
  score: ${USING_MOCKS_SCORE:false}
  seon: ${USING_MOCKS_SEON:false}

rules:
  basic:
    age-2-low: 21
    age-2-high: 70
    income: 350

datasource:
  risk:
    connectionTimeout: ${DATASOURCE_CONNECTION_TIMEOUT:60000}
    maximumPoolSize: ${DATASOURCE_POOL_SIZE:20}
    cachePrepStmts: ${DATASOURCE_CACHE_PREP_STMTS:true}
    prepStmtCacheSize: ${DATASOURCE_PREP_STMT_CACHE_SIZE:250}
    prepStmtCacheSqlLimit: ${DATASOURCE_PREP_STMT_CACHE_SQL_LIMIT:2048}
    useServerPrepStmts: ${DATASOURCE_USE_SERVER_PREP_STMTS:true}
    driverClassName: ${DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
#    url: jdbc:postgresql://${DB_MY_URL:localhost}:${DB_MY_PORT:5432}/${DB_MY_DATABASE:my_risk_service_local}?socketTimeout=30
#    username: ${DB_MY_LOGIN:postgres}
#    password: ${DB_MY_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_MY_URL}:${DB_MY_PORT}/${DB_MY_DATABASE}?socketTimeout=30
    username: ${DB_MY_LOGIN:postgres}
    password: ${DB_MY_PASSWORD:postgres}
  storage:
    connectionTimeout: ${DATASOURCE_STORAGE_CONNECTION_TIMEOUT:60000}
    maximumPoolSize: ${DATASOURCE_STORAGE_POOL_SIZE:20}
    cachePrepStmts: ${DATASOURCE_STORAGE_CACHE_PREP_STMTS:true}
    prepStmtCacheSize: ${DATASOURCE_STORAGE_PREP_STMT_CACHE_SIZE:250}
    prepStmtCacheSqlLimit: ${DATASOURCE_STORAGE_PREP_STMT_CACHE_SQL_LIMIT:2048}
    useServerPrepStmts: ${DATASOURCE_STORAGE_USE_SERVER_PREP_STMTS:true}
    driverClassName: ${DATASOURCE_STORAGE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    url: jdbc:postgresql://${DB_STORAGE_URL}:${DB_STORAGE_PORT:5432}/${DB_STORAGE_DATABASE:dms}?socketTimeout=30
    username: ${DB_STORAGE_LOGIN:xxx}
    password: ${DB_STORAGE_PASSWORD:xxx}

aws:
  default-task-executor:
    core-pool-size: ${CORE_POOL_SIZE:100}
    max-pool-size: ${MAX_POOL_SIZE:100}
    queue-capacity: ${QUEUE_CAPACITY:2}
    blocking-task-timeout: ${BLOCKING_TASK_TIMEOUT:1000}
  sqs:
    max-number-of-messages: ${SQS_MAX_NUMBER_OF_MESSAGES:10}
    back-off-time: ${SQS_BACK_OFF_TIME:60000}
    request:
      queue: ${REQUEST_QUEUES:xxx,xxx,xxx}
      local: xxx
    blacklists:
      producer:
        queue-name: ${BL_RESPONSE_RISK_QUEUE:xxx}
    cooldown:
      producer:
        queue-name: ${COOLDOWN_RESPONSE_RISK_QUEUE:xxx}
    dedup:
      producer:
        queue-name: ${DEDUP_RESPONSE_RISK_QUEUE:xxx}
    basic:
      producer:
        queue-name: ${BASIC_RESPONSE_RISK_QUEUE:xxx}
    score:
      producer:
        queue-name: ${SCORE_RESPONSE_RISK_QUEUE:xxx}
    seon-fraud:
      producer:
        queue-name: ${SEON_FRAUD_RESPONSE_RISK_QUEUE:xxx}
    bureau:
      producer:
        queue-name: ${BUREAU_RESPONSE_RISK_QUEUE:xxx}
    final:
      producer:
        queue-name: ${FINAL_RESPONSE_RISK_QUEUE:xxx}
    experian:
      producer:
        queue-name: ${EXPERIAN_RESPONSE_RISK_QUEUE:xxx}
    credit-history:
      producer:
        queue-name: ${CREDIT_HISTORY_RESPONSE_RISK_QUEUE:xxx}

score:
  paths-to-properties:
    term:
      max: ${DMS_SCORE_TERM_MAX:dms.score.term.max}
      min: ${DMS_SCORE_TERM_MIN:dms.score.term.min}
    amount:
      max: ${DMS_SCORE_AMOUNT_MAX:dms.score.amount.max}
      min: ${DMS_SCORE_AMOUNT_MIN:dms.score.amount.min}
  cache:
    reload-time-minutes: 10
  ds:
    jdbcDriver: org.postgresql.Driver
    url: ${DB_SCORE_URL:xxx}
    port: ${DB_SCORE_PORT:5432}
    database: ${DB_SCORE_DATABASE:xxx}
    username: ${DB_SCORE_USERNAME:xxx}
    password: ${DB_SCORE_PASSWORD:xxx}
  bitbucket:
    url:
      base: ${BITBUCKET_URL:https://api.bitbucket.org/2.0/repositories/xxx/xxx/src/master/projects/}
      il: ${BITBUCKET_PATH_TO_IL:xxx/xxx/app.sql}
      rs1: ${BITBUCKET_PATH_TO_RS1:xxx/xxx/app.sql}
      rs2: ${BITBUCKET_PATH_TO_RS2:xxx/xxx/app.sql}
      rs3: ${BITBUCKET_PATH_TO_RS3:xxx/xxx/app.sql}
    token: ${BASIC_AUTH_BITBUCKET:Basic xxx}

experian:
  base-url: ${EXPERIAN_BASE_URL:https://b2buat.experian.com.my/xxx/xxx}
  username: ${EXPERIAN_BASIC_USERNAME:xxx}
  password: ${EXPERIAN_BASIC_PASSWORD:xxx}
  ccris:
    group-code: ${EXPERIAN_CCRIS_GROUP_CODE:11}
    product-type: ${EXPERIAN_CCRIS_PRODUCT_TYPE:CCRIS_SEARCH}
  review:
    product-type: ${EXPERIAN_CCRIS_PRODUCT_TYPE:IRISS}
  retrieve-report:
    timeout-before-request: ${EXPERIAN_TIMEOUT_BEFORE_REPORT_REQUEST:60000}
  feign:
    options:
      connect-timeout-millis: ${CONNECT_TIMEOUT_MILLIS:300}
      read-timeout-millis: ${READ_TIMEOUT_MILLIS:3000}
    retryer:
      period: ${RETRYER_PERIOD:100}
      duration: ${RETRYER_DURATION:1}
      max-attempts: ${RETRYER_MAX_ATTEMPTS:1}

seon-fraud:
  license-key: ${SEON_LICENSE_KEY:xxx}
  base-url: ${SEON_BASE_URL:https://api.seon.io}
  paths-to-properties:
    timeout: ${DMS_SEON_TIMEOUT:dms.seon.fraud.timeout}
    requests-limit: ${DMS_SEON_REQUESTS_LIMIT:dms.seon.existing.request.within}
    ip:
      api-version: ${DMS_SEON_IP_API_VERSION:dms.seon.ip.api.version}
    email:
      enable: ${DMS_SEON_EMAIL_ENABLE:dms.seon.email.enabled}
      api-version: ${DMS_SEON_EMAIL_API_VERSION:dms.seon.email.api.version}
    phone:
      enable: ${DMS_SEON_PHONE_ENABLE:dms.seon.phone.enabled}
      api-version: ${DMS_SEON_PHONE_API_VERSION:dms.seon.phone.api.version}
      stop-factor:
        enable: ${DMS_SEON_PHONE_STOP_FACTOR_ENABLE:dms.seon.phone.stop.factor.enabled}
    fingerprint:
      enable: ${DMS_SEON_FINGERPRINT_ENABLE:dms.seon.device.fingerprint.enabled}
  default:
    timeout: ${DEFAULT_SEON_TIMEOUT:30000}
    requests-limit: ${DEFAULT_SEON_REQUESTS_LIMIT:30}
    ip:
      api-version: ${DEFAULT_SEON_IP_API_VERSION:1.1}
    email:
      enable: ${DEFAULT_SEON_EMAIL_ENABLE:true}
      api-version: ${DEFAULT_SEON_EMAIL_API_VERSION:2.2}
    phone:
      enable: ${DEFAULT_SEON_PHONE_ENABLE:true}
      api-version: ${DEFAULT_SEON_PHONE_API_VERSION:1.3}
      stop-factor:
        enable: ${DEFAULT_SEON_PHONE_STOP_FACTOR_ENABLE:false}
    fingerprint:
      enable: ${DEFAULT_SEON_FINGERPRINT_ENABLE:true}

blacklist:
  request:
    queue:
      name: ${BLACK_LIST_QUEUE_NAME:xxx}